{"epoch": "1", "task_id": "4", "completion": "'''input\\n2\\n17\\n5\\n\\n\\n\\n'''\\n\\ndef solve():\\n    p = eval(input())\\n\\n    a = 2\\n    b = (p-1)/2\\n    if b==2:\\n        b*=2\\n\\n    print(a,b)\\n\\nfor _ in range(eval(input())):\\n    solve()\\n\\n", "prompt": "Gregor is learning about RSA cryptography, and although he doesn't understand how RSA works, he is now fascinated with prime numbers and factoring them.\\n\\nGregor's favorite prime number is P. Gregor wants to find two bases of P. Formally, Gregor is looking for two integers a and b which satisfy both of the following properties.\\n\\n  * P mod a = P mod b, where x mod y denotes the remainder when x is divided by y, and \\n  * 2 \u2264 a < b \u2264 P. \\n\\n\\n\\nHelp Gregor find two bases of his favorite prime number!\\n\\nInput\\n\\nEach test contains multiple test cases. The first line contains the number of test cases t (1 \u2264 t \u2264 1000).\\n\\nEach subsequent line contains the integer P (5 \u2264 P \u2264 {10}^9), with P guaranteed to be prime.\\n\\nOutput\\n\\nYour output should consist of t lines. Each line should consist of two integers a and b (2 \u2264 a < b \u2264 P). If there are multiple possible solutions, print any.\\n\\nExample\\n\\nInput\\n\\n\\n2\\n17\\n5\\n\\n\\nOutput\\n\\n\\n3 5\\n2 4\\n\\nNote\\n\\nThe first query is P=17. a=3 and b=5 are valid bases in this case, because 17 mod 3 = 17 mod 5 = 2. There are other pairs which work as well.\\n\\nIn the second query, with P=5, the only solution is a=2 and b=4.", "pass_at_1": 0.0}
